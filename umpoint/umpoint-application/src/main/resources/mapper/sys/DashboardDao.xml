<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="my.edu.um.umpoint.modules.sys.dao.DashboardDao">
    <select id="getSpcBookingStats" resultType="map">
        SELECT
            COUNT(*) AS bookingCount,
            IFNULL(SUM(payment_amount), 0) AS bookingAmount
        FROM spc_booking
        WHERE start_day BETWEEN #{startDay} AND #{endDay}
    </select>

    <select id="getSvcBookingStats" resultType="map">
        SELECT
            COUNT(*) AS bookingCount,
            IFNULL(SUM(payment_amount), 0) AS bookingAmount
        FROM svc_booking
        WHERE create_date BETWEEN #{startDay} AND #{endDay}
    </select>

    <select id="getAccBookingStats" resultType="map">
        SELECT
            COUNT(*) AS bookingCount,
            IFNULL(SUM(payment_amount), 0) AS bookingAmount
        FROM acc_booking
        WHERE start_day BETWEEN #{startDay} AND #{endDay}
    </select>

    <select id="getTotalSpaces" resultType="int">
        SELECT COUNT(*)
        FROM spc_space
        WHERE status = 1
    </select>

    <select id="getTotalServices" resultType="int">
        SELECT COUNT(*)
        FROM svc_service
        WHERE status = 1
    </select>

    <select id="getTotalAccommodations" resultType="int">
        SELECT COUNT(*)
        FROM acc_accommodation
        WHERE status = 1
    </select>

    <select id="getSpcDailyBookingAmounts" resultType="java.lang.Double">
        WITH RECURSIVE date_range AS (
            SELECT
                #{startDay} AS booking_date
            UNION ALL
            SELECT
                DATE_ADD(booking_date, INTERVAL 1 DAY)
            FROM date_range
            WHERE booking_date &lt; #{endDay}
        )
        SELECT IFNULL(SUM(sb.payment_amount), 0) AS total_booking_amount
        FROM date_range dr
        LEFT JOIN spc_booking sb ON dr.booking_date = DATE(sb.create_date)
        GROUP BY dr.booking_date
        ORDER BY dr.booking_date;
    </select>

    <select id="getSvcDailyBookingAmounts" resultType="java.lang.Double">
        WITH RECURSIVE date_range AS (
            SELECT
                #{startDay} AS booking_date
            UNION ALL
            SELECT
                DATE_ADD(booking_date, INTERVAL 1 DAY)
            FROM date_range
            WHERE booking_date &lt; #{endDay}
        )
        SELECT IFNULL(SUM(sb.payment_amount), 0) AS total_booking_amount
        FROM date_range dr
         LEFT JOIN svc_booking sb ON dr.booking_date = DATE(sb.create_date)
        GROUP BY dr.booking_date
        ORDER BY dr.booking_date;
    </select>

    <select id="getAccDailyBookingAmounts" resultType="java.lang.Double">
        WITH RECURSIVE date_range AS (
            SELECT
                #{startDay} AS booking_date
            UNION ALL
            SELECT
                DATE_ADD(booking_date, INTERVAL 1 DAY)
            FROM date_range
            WHERE booking_date &lt; #{endDay}
        )
        SELECT IFNULL(SUM(ab.payment_amount), 0) AS total_booking_amount
        FROM date_range dr
        LEFT JOIN acc_booking ab ON dr.booking_date = DATE(ab.create_date)
        GROUP BY dr.booking_date
        ORDER BY dr.booking_date;
    </select>

    <select id="getTop10SpacesByBookingAmount" resultType="map">
        SELECT
            ss.name AS name,
            SUM(sb.payment_amount) AS amount
        FROM spc_booking sb
        JOIN spc_space ss ON sb.space_id = ss.id
        WHERE sb.create_date BETWEEN #{startDay} AND #{endDay}
        GROUP BY sb.space_id
        ORDER BY amount DESC
        LIMIT 10
    </select>

    <select id="getTop10ServicesByBookingAmount" resultType="map">
        SELECT
            ss.name AS name,
            SUM(sb.payment_amount) AS amount
        FROM svc_booking sb
        JOIN svc_service ss ON sb.service_id = ss.id
        WHERE sb.create_date BETWEEN #{startDay} AND #{endDay}
        GROUP BY sb.service_id
        ORDER BY amount DESC
        LIMIT 10
    </select>

    <select id="getTop10AccommodationsByBookingAmount" resultType="map">
        SELECT
            aa.name AS name,
            SUM(ab.payment_amount) AS amount
        FROM acc_booking ab
        JOIN acc_accommodation aa ON ab.accommodation_id = aa.id
        WHERE ab.create_date BETWEEN #{startDay} AND #{endDay}
        GROUP BY ab.accommodation_id
        ORDER BY amount DESC
        LIMIT 10
    </select>
</mapper>